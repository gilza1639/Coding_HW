"""
Задание 1.

Приведен код, который позволяет сохранить в
массиве индексы четных элементов другого массива

Сделайте замеры времени выполнения кода с помощью модуля timeit

Попробуйте оптимизировать код, чтобы снизить время выполнения
Проведите повторные замеры

Добавьте аналитику: что вы сделали и почему
"""
import timeit
import random


def func_1(nums):
    new_arr = []
    for i in range(len(nums)):
        if nums[i] % 2 == 0:
            new_arr.append(i)
    return new_arr






# вместо подсчета длины списка и перевода его в range, ввел сразу enumerate

def func_2(nums):
    new_arr = []
    for id, num in enumerate(nums):
        if num % 2 == 0:
            new_arr.append(id)
    return new_arr


def array_gen(num):
    return [random.randint(0,100) for el in range(num)]


array = array_gen(1000)

# для проверки того, что результаты совпадают
print(f'f1 - {func_1(array)}\nf2 - {func_2(array)}')

func_list = 'func_1 func_2'.split()
print('\nTIMER\n')
for func_name in func_list:
    print(f"{func_name} -\t{timeit.repeat(stmt=func_name + f'({array})', setup=f'from __main__ import {func_name}', timer=timeit.default_timer, repeat=5, number=10000)}")

'''
консоль

f1 - [0, 1, 6, 7, 9, 11, 12, 19, 20, 24, 26, 28, 31, 32, 36, 38, 40, 41, 42, 43, 44, 46, 49, 51, 52, 53, 55, 56, 57, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 75, 76, 79, 80, 83, 84, 85, 91, 92, 93, 94, 95, 97, 98, 99, 100, 103, 107, 108, 110, 112, 113, 115, 116, 117, 119, 120, 125, 126, 131, 132, 133, 135, 136, 139, 140, 141, 142, 143, 146, 148, 149, 150, 151, 152, 155, 158, 160, 161, 163, 164, 165, 167, 168, 171, 172, 173, 174, 179, 180, 182, 183, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 211, 215, 216, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 235, 237, 239, 241, 242, 246, 247, 248, 251, 252, 254, 255, 256, 259, 260, 261, 262, 263, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 280, 285, 286, 287, 288, 289, 290, 291, 296, 302, 304, 307, 308, 310, 313, 316, 317, 318, 319, 324, 325, 326, 327, 328, 329, 331, 334, 336, 337, 339, 345, 346, 352, 353, 355, 357, 358, 364, 365, 369, 370, 371, 373, 374, 376, 377, 379, 385, 388, 389, 390, 391, 394, 395, 399, 403, 405, 408, 409, 410, 412, 413, 416, 418, 425, 427, 428, 431, 432, 435, 443, 444, 446, 450, 451, 452, 454, 455, 458, 459, 461, 465, 466, 467, 469, 470, 475, 476, 477, 478, 480, 486, 487, 490, 491, 493, 497, 499, 500, 501, 503, 504, 509, 511, 512, 513, 515, 518, 520, 521, 524, 527, 529, 533, 535, 536, 541, 542, 543, 547, 550, 551, 552, 554, 557, 558, 559, 560, 563, 566, 567, 568, 569, 573, 575, 576, 577, 582, 583, 584, 586, 591, 595, 596, 598, 601, 603, 604, 606, 608, 609, 610, 612, 613, 614, 619, 620, 621, 623, 625, 626, 627, 629, 632, 634, 637, 638, 640, 641, 642, 644, 645, 651, 652, 653, 655, 656, 657, 661, 662, 663, 664, 666, 668, 669, 672, 673, 675, 676, 677, 678, 681, 685, 686, 689, 693, 694, 698, 699, 700, 702, 704, 707, 708, 712, 715, 716, 717, 719, 728, 731, 735, 737, 738, 741, 743, 745, 746, 748, 753, 754, 757, 758, 759, 761, 763, 764, 765, 766, 767, 770, 773, 775, 779, 781, 783, 784, 785, 790, 792, 794, 795, 796, 798, 799, 800, 804, 807, 808, 809, 810, 811, 813, 816, 818, 819, 820, 821, 822, 823, 825, 827, 830, 832, 834, 835, 837, 838, 839, 842, 845, 849, 853, 856, 857, 858, 859, 860, 861, 862, 865, 867, 868, 869, 870, 876, 877, 878, 879, 881, 884, 885, 886, 887, 889, 890, 891, 897, 899, 903, 906, 907, 908, 909, 911, 912, 913, 914, 916, 917, 918, 921, 922, 923, 924, 926, 929, 931, 932, 933, 934, 936, 938, 943, 944, 950, 951, 952, 954, 955, 965, 968, 971, 972, 976, 979, 985, 987, 997, 998, 999]
f2 - [0, 1, 6, 7, 9, 11, 12, 19, 20, 24, 26, 28, 31, 32, 36, 38, 40, 41, 42, 43, 44, 46, 49, 51, 52, 53, 55, 56, 57, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 75, 76, 79, 80, 83, 84, 85, 91, 92, 93, 94, 95, 97, 98, 99, 100, 103, 107, 108, 110, 112, 113, 115, 116, 117, 119, 120, 125, 126, 131, 132, 133, 135, 136, 139, 140, 141, 142, 143, 146, 148, 149, 150, 151, 152, 155, 158, 160, 161, 163, 164, 165, 167, 168, 171, 172, 173, 174, 179, 180, 182, 183, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 207, 208, 209, 211, 215, 216, 217, 219, 221, 222, 223, 225, 226, 227, 228, 230, 235, 237, 239, 241, 242, 246, 247, 248, 251, 252, 254, 255, 256, 259, 260, 261, 262, 263, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 280, 285, 286, 287, 288, 289, 290, 291, 296, 302, 304, 307, 308, 310, 313, 316, 317, 318, 319, 324, 325, 326, 327, 328, 329, 331, 334, 336, 337, 339, 345, 346, 352, 353, 355, 357, 358, 364, 365, 369, 370, 371, 373, 374, 376, 377, 379, 385, 388, 389, 390, 391, 394, 395, 399, 403, 405, 408, 409, 410, 412, 413, 416, 418, 425, 427, 428, 431, 432, 435, 443, 444, 446, 450, 451, 452, 454, 455, 458, 459, 461, 465, 466, 467, 469, 470, 475, 476, 477, 478, 480, 486, 487, 490, 491, 493, 497, 499, 500, 501, 503, 504, 509, 511, 512, 513, 515, 518, 520, 521, 524, 527, 529, 533, 535, 536, 541, 542, 543, 547, 550, 551, 552, 554, 557, 558, 559, 560, 563, 566, 567, 568, 569, 573, 575, 576, 577, 582, 583, 584, 586, 591, 595, 596, 598, 601, 603, 604, 606, 608, 609, 610, 612, 613, 614, 619, 620, 621, 623, 625, 626, 627, 629, 632, 634, 637, 638, 640, 641, 642, 644, 645, 651, 652, 653, 655, 656, 657, 661, 662, 663, 664, 666, 668, 669, 672, 673, 675, 676, 677, 678, 681, 685, 686, 689, 693, 694, 698, 699, 700, 702, 704, 707, 708, 712, 715, 716, 717, 719, 728, 731, 735, 737, 738, 741, 743, 745, 746, 748, 753, 754, 757, 758, 759, 761, 763, 764, 765, 766, 767, 770, 773, 775, 779, 781, 783, 784, 785, 790, 792, 794, 795, 796, 798, 799, 800, 804, 807, 808, 809, 810, 811, 813, 816, 818, 819, 820, 821, 822, 823, 825, 827, 830, 832, 834, 835, 837, 838, 839, 842, 845, 849, 853, 856, 857, 858, 859, 860, 861, 862, 865, 867, 868, 869, 870, 876, 877, 878, 879, 881, 884, 885, 886, 887, 889, 890, 891, 897, 899, 903, 906, 907, 908, 909, 911, 912, 913, 914, 916, 917, 918, 921, 922, 923, 924, 926, 929, 931, 932, 933, 934, 936, 938, 943, 944, 950, 951, 952, 954, 955, 965, 968, 971, 972, 976, 979, 985, 987, 997, 998, 999]

TIMER

func_1 -	[1.6013172, 1.5492756, 1.5257130000000005, 1.6227343000000003, 1.722561999999999]
func_2 -	[1.5308662999999996, 1.818803299999999, 1.4315519000000005, 1.3570642999999993, 1.4684316000000006]

'''