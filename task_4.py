"""
Задание 4.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
"""



#
# А как вы собственно говоря видете подсчет сложности, если нужно считать по самому сложному варианту
# А по самому сложному - беспонечный цикл на любом While при неправильном вводе логина / пароля / согласия / года
# Если же все ввести с первого раза и неактив аккаунтом, то будет 2n +26
# Не вижу смысла реализовывать три одинаковых алгоритма с разными запросами к бд. Изменится три тсрочки кода
# Я б занялся если б нужно было писать на MySQL
# Это и единственный нормальный способ, и самый оптимальный
#



database = [['Gilza', 'Qwerty1337', True], ['Not_a_Gilza', 'Fuck123', False]]

def auth (database):
    can_be_allow = False
    while can_be_allow == False:
        login = input('Введите логин соблюдая регистр: ')
        password = input('Введите пароль: ')
        for id, el in enumerate(database):
            if el[0] == login and el[1] == password:
                can_be_allow = True
                is_active = el[2]
                user_id = id
                break
        print('\nНеправильный логин или пароль\n')
    while is_active == False:
        while True:
            print('Ваша учетная запись не активированна\nХотите пройти активацию?')
            agree = input('Напишите Y если согласны или N если не согласны\nВвод: ')
            if agree in ['Y', 'N']:
                if agree=='Y':
                    while True:
                        firstname = input('Введите имя: ')
                        lastname = input('Введите фамилию: ')
                        b_year = input('Введите год рождения числом: ')
                        try:
                            b_year = int(b_year)
                        except:
                            print('ДЕНЬ РОЖДЕНИЕ ЧИСЛОМ АЛЛО')
                            continue
                        if type(b_year)==type(1):
                            database[user_id].append(firstname)
                            database[user_id].append(lastname)
                            database[user_id].append(b_year)
                            is_active = True
                            break
                    break
                else:
                    print('Всего доброго')
                    return
            else:
                print('Вы ввели что-то не так :(')

    print('Вы на сайте, поздравляю')
    while True:
        print('Теперь ты счастлив')

auth(database)
